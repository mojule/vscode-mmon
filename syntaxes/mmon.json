{
  "name": "Mojule Model Object Notation",
  "fileTypes": [
    "mmon"
  ],
  "scopeName": "source.mmon",
  "uuid": "162ffb5f-36ab-45a5-a644-4f751949d575",
  "patterns": [
    {
      "include": "#value"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "/\\*\\*",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json"
            }
          },
          "end": "\\*/",
          "name": "comment.block.documentation.json"
        },
        {
          "begin": "/\\*",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json"
            }
          },
          "end": "\\*/",
          "name": "comment.block.json"
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.json"
            }
          },
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.js"
        }
      ]
    },
    "constant": {
      "match": "\\b(?:true|false|null)\\b",
      "name": "keyword.control"
    },
    "number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.json"
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.json"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.json"
        }
      },
      "name": "string.quoted.double.json",
      "patterns": [
        {
          "include": "#stringcontent"
        }
      ]
    },
    "propertykey": {
      "match": "\\S+:",
      "name": "entity.other.attribute-name"
    },
    "arraykey": {
      "match": "\\S+\\[]",
      "name": "entity.other.attribute-name"
    },
    "objectkey": {
      "match": "\\S+{}",
      "name": "entity.other.attribute-name"
    },
    "embedkey": {
      "match": "\\S+$",
      "name": "entity.other.attribute-name"
    },
    "stringcontent": {
      "patterns": [
        {
          "match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
          "name": "constant.character.escape.json"
        },
        {
          "match": "\\\\.",
          "name": "invalid.illegal.unrecognized-string-escape.json"
        }
      ]
    },
    "tag": {
      "match": "\\S+>",
      "name": "constant.language.json"
    },
    "token": {
      "match": "\\b\\w+\\b",
      "name": "meta.selector"
    },
    "value": {
      "patterns": [
        {
          "include": "#constant"
        },
        {
          "include": "#number"
        },
        {
          "include": "#string"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#tag"
        },
        {
          "include": "#propertykey"
        },
        {
          "include": "#arraykey"
        },
        {
          "include": "#objectkey"
        },
        {
          "include": "#embedkey"
        },
        {
          "include": "#token"
        }
      ]
    }
  }
}