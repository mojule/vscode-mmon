{
  "name": "Mojule Model Object Notation",
  "fileTypes": [
    "mmon"
  ],
  "scopeName": "source.mmon",
  "uuid": "162ffb5f-36ab-45a5-a644-4f751949d575",
  "patterns": [
    {
      "include": "#value"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.mmon",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.double-slash.mmon",
          "match": "(//).*$\\n?",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.mmon"
            }
          }
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.mmon",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.mmon"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.mmon"
        }
      },
      "patterns": [
        {
          "include": "#stringcontent"
        }
      ]
    },
    "stringcontent": {
      "patterns": [
        {
          "name": "constant.character.escape.mmon",
          "match": "\\\\(?:[\\\"\\\\/bfnrt]|u[0-9a-fA-F]{4})"
        },
        {
          "name": "invalid.illegal.unrecognized-string-escape.mmon",
          "match": "\\\\."
        }
      ]
    },
    "tag" : {
      "name": "entity.name.tag.mmon",
      "begin": "^\\s*?(\\S.*?)(>)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.tag.mmon"
        },
        "2": {
          "name": "keyword.control.mmon"
        }
      },
      "end": "\\s"

    },
    "property": {
      "name": "entity.other.attribute-name.mmon",
      "begin": "^\\s*?(\\S.*?)(:|\\[]|{}|\\$)",
      "beginCaptures": {
        "1": {
          "name": "entity.other.attribute-name.mmon"
        },
        "2": {
          "name": "keyword.control.mmon"
        }
      },
      "end": "\\s"
    },
    "assignment": {
      "name": "keyword.control.mmon",
      "match": "(:|\\[]|{}|\\$)"
    },
    "constant": {
      "name": "constant.language.mmon",
      "match": "\\b(?:true|false|null)\\b"
    },
    "number": {
      "name": "constant.numeric.mmon",
      "match": "\\b-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?"
    },
    "others": {
      "name": "string.quoted.double.mmon",
      "match": "\\b\\w+?\\b"
    },
    "value": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#string"
        },
        {
          "include": "#tag"
        },
        {
          "include": "#property"
        },
        {
          "include": "#assignment"
        },
        {
          "include": "#constant"
        },
        {
          "include": "#number"
        },
        {
          "include": "#others"
        }
      ]
    }
  }
}